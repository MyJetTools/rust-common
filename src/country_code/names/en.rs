use std::collections::BTreeMap;

use crate::country_code::CountryCode;

lazy_static::lazy_static! {
    pub static ref EN_NAMES: BTreeMap<CountryCode, &'static str> = {

        let mut result = BTreeMap::new();
        result.insert(CountryCode::AFG, "Afghanistan");
        result.insert(CountryCode::ALA, "Åland Islands");
        result.insert(CountryCode::ALB, "Albania");
        result.insert(CountryCode::ARM, "Armenia");
        result.insert(CountryCode::ARG, "Argentina");
        result.insert(CountryCode::DZA, "Algeria");
        result.insert(CountryCode::ASM, "American Samoa");
        result.insert(CountryCode::AND, "Andorra");
        result.insert(CountryCode::AGO, "Angola");
        result.insert(CountryCode::AIA, "Anguilla");
        result.insert(CountryCode::ATA, "Antarctica");
        result.insert(CountryCode::ATG, "Antigua and Barbuda");
        result.insert(CountryCode::ABW, "Aruba");
        result.insert(CountryCode::AUS, "Australia");
        result.insert(CountryCode::AUT, "Austria");
        result.insert(CountryCode::AZE, "Azerbaijan");
        result.insert(CountryCode::BHS, "Bahamas");
        result.insert(CountryCode::BHR, "Bahrain");
        result.insert(CountryCode::BGD, "Bangladesh");
        result.insert(CountryCode::BRB, "Barbados");
        result.insert(CountryCode::BLR, "Belarus");
        result.insert(CountryCode::BEL, "Belgium");
        result.insert(CountryCode::BLZ, "Belize");
        result.insert(CountryCode::BEN, "Benin");
        result.insert(CountryCode::BMU, "Bermuda");
        result.insert(CountryCode::BTN, "Bhutan");
        result.insert(CountryCode::BOL, "Bolivia (Plurinational State of)");
        result.insert(CountryCode::BES, "Bonaire, Sint Eustatius and Saba");
        result.insert(CountryCode::BIH, "Bosnia and Herzegovina");
        result.insert(CountryCode::BWA, "Botswana");
        result.insert(CountryCode::BVT, "Bouvet Island");
        result.insert(CountryCode::BRA, "Brazil");
        result.insert(CountryCode::IOT, "British Indian Ocean Territory");
        result.insert(CountryCode::VGB, "British Virgin Islands");
        result.insert(CountryCode::BRN, "Brunei Darussalam");
        result.insert(CountryCode::BGR, "Bulgaria");
        result.insert(CountryCode::BFA, "Burkina Faso");
        result.insert(CountryCode::BDI, "Burundi");
        result.insert(CountryCode::CPV, "Cabo Verde");
        result.insert(CountryCode::KHM, "Cambodia");
        result.insert(CountryCode::CMR, "Cameroon");
        result.insert(CountryCode::CAN, "Canada");
        result.insert(CountryCode::CYM, "Cayman Islands");
        result.insert(CountryCode::CAF, "Central African Republic");
        result.insert(CountryCode::TCD, "Chad");
        result.insert(CountryCode::CHL, "Chile");
        result.insert(CountryCode::CHN, "China");
        result.insert(CountryCode::HKG, "Hong Kong Special Administrative Region, China");
        result.insert(CountryCode::MAC, "Macao Special Administrative Region, China");
        result.insert(CountryCode::CXR, "Christmas Island");
        result.insert(CountryCode::CCK, "Cocos (Keeling) Islands");
        result.insert(CountryCode::COL, "Colombia");
        result.insert(CountryCode::COM, "Comoros");
        result.insert(CountryCode::COG, "Congo");
        result.insert(CountryCode::COK, "Cook Islands");
        result.insert(CountryCode::CRI, "Costa Rica");
        result.insert(CountryCode::CIV, "Côte d'Ivoire");
        result.insert(CountryCode::HRV, "Croatia");
        result.insert(CountryCode::CUB, "Cuba");
        result.insert(CountryCode::CUW, "Curaçao");
        result.insert(CountryCode::CYP, "Cyprus");
        result.insert(CountryCode::CZE, "Czechia");
        result.insert(CountryCode::PRK, "Democratic People's Republic of Korea");
        result.insert(CountryCode::COD, "Democratic Republic of the Congo");
        result.insert(CountryCode::DNK, "Denmark");
        result.insert(CountryCode::DJI, "Djibouti");
        result.insert(CountryCode::DMA, "Dominica");
        result.insert(CountryCode::DOM, "Dominican Republic");
        result.insert(CountryCode::ECU, "Ecuador");
        result.insert(CountryCode::EGY, "Egypt");
        result.insert(CountryCode::SLV, "El Salvador");
        result.insert(CountryCode::GNQ, "Equatorial Guinea");
        result.insert(CountryCode::ERI, "Eritrea");
        result.insert(CountryCode::EST, "Estonia");
        result.insert(CountryCode::ETH, "Ethiopia");
        result.insert(CountryCode::FLK, "Falkland Islands (Malvinas)");
        result.insert(CountryCode::FRO, "Faroe Islands");
        result.insert(CountryCode::FJI, "Fiji");
        result.insert(CountryCode::FIN, "Finland");
        result.insert(CountryCode::FRA, "France");
        result.insert(CountryCode::GUF, "French Guiana");
        result.insert(CountryCode::PYF, "French Polynesia");
        result.insert(CountryCode::ATF, "French Southern Territories");
        result.insert(CountryCode::GAB, "Gabon");
        result.insert(CountryCode::GMB, "Gambia");
        result.insert(CountryCode::GEO, "Georgia");
        result.insert(CountryCode::DEU, "Germany");
        result.insert(CountryCode::GHA, "Ghana");
        result.insert(CountryCode::GIB, "Gibraltar");
        result.insert(CountryCode::GRC, "Greece");
        result.insert(CountryCode::GRL, "Greenland");
        result.insert(CountryCode::GRD, "Grenada");
        result.insert(CountryCode::GLP, "Guadeloupe");
        result.insert(CountryCode::GUM, "Guam");
        result.insert(CountryCode::GTM, "Guatemala");
        result.insert(CountryCode::GGY, "Guernsey");
        result.insert(CountryCode::GIN, "Guinea");
        result.insert(CountryCode::GNB, "Guinea-Bissau");
        result.insert(CountryCode::GUY, "Guyana");
        result.insert(CountryCode::HTI, "Haiti");
        result.insert(CountryCode::HMD, "Heard Island and McDonald Islands");
        result.insert(CountryCode::VAT, "Holy See");
        result.insert(CountryCode::HND, "Honduras");
        result.insert(CountryCode::HUN, "Hungary");
        result.insert(CountryCode::ISL, "Iceland");
        result.insert(CountryCode::IND, "India");
        result.insert(CountryCode::IDN, "Indonesia");
        result.insert(CountryCode::IRN, "Iran (Islamic Republic of)");
        result.insert(CountryCode::IRQ, "Iraq");
        result.insert(CountryCode::IRL, "Ireland");
        result.insert(CountryCode::IMN, "Isle of Man");
        result.insert(CountryCode::ISR, "Israel");
        result.insert(CountryCode::ITA, "Italy");
        result.insert(CountryCode::JAM, "Jamaica");
        result.insert(CountryCode::JPN, "Japan");
        result.insert(CountryCode::JEY, "Jersey");
        result.insert(CountryCode::JOR, "Jordan");
        result.insert(CountryCode::KAZ, "Kazakhstan");
        result.insert(CountryCode::KEN, "Kenya");
        result.insert(CountryCode::KIR, "Kiribati");
        result.insert(CountryCode::KWT, "Kuwait");
        result.insert(CountryCode::KGZ, "Kyrgyzstan");
        result.insert(CountryCode::LAO, "Lao People's Democratic Republic");
        result.insert(CountryCode::LVA, "Latvia");
        result.insert(CountryCode::LBN, "Lebanon");
        result.insert(CountryCode::LSO, "Lesotho");
        result.insert(CountryCode::LBR, "Liberia");
        result.insert(CountryCode::LBY, "Libya");
        result.insert(CountryCode::LIE, "Liechtenstein");
        result.insert(CountryCode::LTU, "Lithuania");
        result.insert(CountryCode::LUX, "Luxembourg");
        result.insert(CountryCode::MDG, "Madagascar");
        result.insert(CountryCode::MWI, "Malawi");
        result.insert(CountryCode::MYS, "Malaysia");
        result.insert(CountryCode::MDV, "Maldives");
        result.insert(CountryCode::MLI, "Mali");
        result.insert(CountryCode::MLT, "Malta");
        result.insert(CountryCode::MHL, "Marshall Islands");
        result.insert(CountryCode::MTQ, "Martinique");
        result.insert(CountryCode::MRT, "Mauritania");
        result.insert(CountryCode::MUS, "Mauritius");
        result.insert(CountryCode::MYT, "Mayotte");
        result.insert(CountryCode::MEX, "Mexico");
        result.insert(CountryCode::FSM, "Micronesia (Federated States of)");
        result.insert(CountryCode::MCO, "Monaco");
        result.insert(CountryCode::MNG, "Mongolia");
        result.insert(CountryCode::MNE, "Montenegro");
        result.insert(CountryCode::MSR, "Montserrat");
        result.insert(CountryCode::MAR, "Morocco");
        result.insert(CountryCode::MOZ, "Mozambique");
        result.insert(CountryCode::MMR, "Myanmar");
        result.insert(CountryCode::NAM, "Namibia");
        result.insert(CountryCode::NRU, "Nauru");
        result.insert(CountryCode::NPL, "Nepal");
        result.insert(CountryCode::NLD, "Netherlands");
        result.insert(CountryCode::NCL, "New Caledonia");
        result.insert(CountryCode::NZL, "New Zealand");
        result.insert(CountryCode::NIC, "Nicaragua");
        result.insert(CountryCode::NER, "Niger");
        result.insert(CountryCode::NGA, "Nigeria");
        result.insert(CountryCode::NIU, "Niue");
        result.insert(CountryCode::NFK, "Norfolk Island");
        result.insert(CountryCode::MNP, "Northern Mariana Islands");
        result.insert(CountryCode::NOR, "Norway");
        result.insert(CountryCode::OMN, "Oman");
        result.insert(CountryCode::PAK, "Pakistan");
        result.insert(CountryCode::PLW, "Palau");
        result.insert(CountryCode::PAN, "Panama");
        result.insert(CountryCode::PNG, "Papua New Guinea");
        result.insert(CountryCode::PRY, "Paraguay");
        result.insert(CountryCode::PER, "Peru");
        result.insert(CountryCode::PHL, "Philippines");
        result.insert(CountryCode::PCN, "Pitcairn");
        result.insert(CountryCode::POL, "Poland");
        result.insert(CountryCode::PRT, "Portugal");
        result.insert(CountryCode::PRI, "Puerto Rico");
        result.insert(CountryCode::QAT, "Qatar");
        result.insert(CountryCode::KOR, "Republic of Korea");
        result.insert(CountryCode::MDA, "Republic of Moldova");
        result.insert(CountryCode::REU, "Réunion");
        result.insert(CountryCode::ROU, "Romania");
        result.insert(CountryCode::RUS, "Russian Federation");
        result.insert(CountryCode::RWA, "Rwanda");
        result.insert(CountryCode::BLM, "Saint Barthélemy");
        result.insert(CountryCode::SHN, "Saint Helena");
        result.insert(CountryCode::KNA, "Saint Kitts and Nevis");
        result.insert(CountryCode::LCA, "Saint Lucia");
        result.insert(CountryCode::MAF, "Saint Martin (French Part)");
        result.insert(CountryCode::SPM, "Saint Pierre and Miquelon");
        result.insert(CountryCode::VCT, "Saint Vincent and the Grenadines");
        result.insert(CountryCode::WSM, "Samoa");
        result.insert(CountryCode::SMR, "San Marino");
        result.insert(CountryCode::STP, "Sao Tome and Principe");
        result.insert(CountryCode::SAU, "Saudi Arabia");
        result.insert(CountryCode::SEN, "Senegal");
        result.insert(CountryCode::SRB, "Serbia");
        result.insert(CountryCode::SYC, "Seychelles");
        result.insert(CountryCode::SLE, "Sierra Leone");
        result.insert(CountryCode::SGP, "Singapore");
        result.insert(CountryCode::SXM, "Sint Maarten (Dutch part)");
        result.insert(CountryCode::SVK, "Slovakia");
        result.insert(CountryCode::SVN, "Slovenia");
        result.insert(CountryCode::SLB, "Solomon Islands");
        result.insert(CountryCode::SOM, "Somalia");
        result.insert(CountryCode::ZAF, "South Africa");
        result.insert(CountryCode::SGS, "South Georgia and the South Sandwich Islands");
        result.insert(CountryCode::SSD, "South Sudan");
        result.insert(CountryCode::ESP, "Spain");
        result.insert(CountryCode::LKA, "Sri Lanka");
        result.insert(CountryCode::PSE, "State of Palestine");
        result.insert(CountryCode::SDN, "Sudan");
        result.insert(CountryCode::SUR, "Suriname");
        result.insert(CountryCode::SJM, "Svalbard and Jan Mayen Islands");
        result.insert(CountryCode::SWZ, "Swaziland");
        result.insert(CountryCode::SWE, "Sweden");
        result.insert(CountryCode::CHE, "Switzerland");
        result.insert(CountryCode::SYR, "Syrian Arab Republic");
        result.insert(CountryCode::TWN, "Taiwan");
        result.insert(CountryCode::TJK, "Tajikistan");
        result.insert(CountryCode::THA, "Thailand");
        result.insert(CountryCode::MKD, "North Macedonia");
        result.insert(CountryCode::TLS, "Timor-Leste");
        result.insert(CountryCode::TGO, "Togo");
        result.insert(CountryCode::TKL, "Tokelau");
        result.insert(CountryCode::TON, "Tonga");
        result.insert(CountryCode::TTO, "Trinidad and Tobago");
        result.insert(CountryCode::TUN, "Tunisia");
        result.insert(CountryCode::TUR, "Turkey");
        result.insert(CountryCode::TKM, "Turkmenistan");
        result.insert(CountryCode::TCA, "Turks and Caicos Islands");
        result.insert(CountryCode::TUV, "Tuvalu");
        result.insert(CountryCode::UGA, "Uganda");
        result.insert(CountryCode::UKR, "Ukraine");
        result.insert(CountryCode::ARE, "United Arab Emirates");
        result.insert(CountryCode::GBR, "United Kingdom of Great Britain and Northern Ireland");
        result.insert(CountryCode::TZA, "United Republic of Tanzania");
        result.insert(CountryCode::UMI, "United States Minor Outlying Islands");
        result.insert(CountryCode::USA, "United States of America");
        result.insert(CountryCode::VIR, "United States Virgin Islands");
        result.insert(CountryCode::URY, "Uruguay");
        result.insert(CountryCode::UZB, "Uzbekistan");
        result.insert(CountryCode::VUT, "Vanuatu");
        result.insert(CountryCode::VEN, "Venezuela (Bolivarian Republic of)");
        result.insert(CountryCode::VNM, "Viet Nam");
        result.insert(CountryCode::WLF, "Wallis and Futuna Islands");
        result.insert(CountryCode::ESH, "Western Sahara");
        result.insert(CountryCode::YEM, "Yemen");
        result.insert(CountryCode::ZMB, "Zambia");
        result.insert(CountryCode::ZWE, "Zimbabwe");
        result
    };
}
